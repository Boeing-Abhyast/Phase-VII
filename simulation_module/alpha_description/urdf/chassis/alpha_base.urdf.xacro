<?xml version="1.0"?>
<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
       xmlns:interface="http://ros.org/wiki/xacro"
       xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:include filename="$(find alpha_description)/urdf/chassis/alpha_base.gazebo.xacro" />
  <xacro:include filename="$(find alpha_description)/urdf/chassis/alpha_base.transmission.xacro" />
  <xacro:include filename="$(find alpha_description)/urdf/materials.urdf.xacro" />

  <!-- DATA SOURCES -->
  <!-- all link geometry sizes are obtained from Function provided CAD model unless stated otherwise -->
  <!-- all simplified collision geometry are hand approximated from CAD model, sometimes from respective bounding boxes -->

  <xacro:property name="M_PI" value="3.1415926535897931" />

  <xacro:property name="caster_offset_x" value="0.0" />
  <xacro:property name="caster_offset_y" value="0.11" />
  <xacro:property name="caster_offset_z" value="0.0" />
  <xacro:property name="caster_mass" value="0.067" />

  <xacro:property name="wheel_offset_x" value="-0.132" />
  <xacro:property name="wheel_offset_y" value="0.022" />
  <xacro:property name="wheel_offset_z" value="-0.165" />
  <xacro:property name="wheel_mass" value="0.4" />

  <xacro:property name="base_z" value="0.037" />
  <xacro:property name="base_mass" value="1.3083" />
  <xacro:property name="base_collision_length" value="0.10938" />
  <xacro:property name="base_collision_radius" value="0.19" />

  <!-- Macro for aplha wheel (right/left)-->
  <!-- in typical convention param "reflect" equals +-1 to distinguish left from righ-->
  <xacro:macro name="alpha_wheel" params="suffix parent reflect">

    <joint name="${parent}_${suffix}_wheel_joint" type="continuous">
      <axis xyz="0 0 ${reflect * 1}" />
      <limit effort="18" velocity="1.5"/>
      <safety_controller  k_velocity="1" />
      <dynamics damping="1.0" friction="0.0" />
      <origin xyz="${reflect * wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="${M_PI/2} 0 ${reflect * M_PI/2}" />
      <parent link="${parent}_rotation_link"/>
      <child link="${parent}_${suffix}_wheel_link"/>
    </joint>

    <link name="${parent}_${suffix}_wheel_link">
      <inertial>
        <mass value="${wheel_mass}" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.00027992"
                 ixy="-1.1223E-19"
                 ixz="2.6988E-20"
                 iyy="0.00027992"
                 iyz="8.6881E-21"
                 izz="0.00045332"/>
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://alpha_description/meshes/chassis/wheel.STL" />
        </geometry>
        <material name="Black" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" /> <!-- rotation because cyl. geom primitive has symmetry axis in +x direction -->
        <geometry>
          <mesh filename="package://alpha_description/meshes/chassis/wheel.STL" />
        </geometry>
      </collision>
    </link>

    <!-- extensions -->
    <xacro:alpha_wheel_gazebo parent="${parent}" suffix="${suffix}" />
    <xacro:alpha_wheel_transmission parent="${parent}" suffix="${suffix}" reflect="${reflect}" />

  </xacro:macro>

  <!-- Macro for alpha caster hub only -->
  <xacro:macro name="alpha_caster_hub" params="suffix parent *origin ref_position" >

    <joint name="${suffix}_rotation_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent}"/>
      <child link="${suffix}_rotation_link" />
    </joint>

    <link name="${suffix}_rotation_link">
      <inertial>
        <mass value="${caster_mass}"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="7.34836188095286E-07"
                 ixy="-8.85813875476203E-23"
                 ixz="-2.27179291546233E-23"
                 iyy="5.26473063708137E-07"
                 iyz="-1.32876082683251E-22"
                 izz="7.34836188095287E-07" />
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://alpha_description/meshes/chassis/caster_body.STL" />
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://alpha_description/meshes/chassis/caster_body.STL" />
        </geometry>
      </collision>
    </link>

    <link name="${suffix}_caster_link">
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <mass value="0.0005236" />
        <inertia ixx="5.236E-09"
                 ixy="1.551E-25"
                 ixz="1.034E-25"
                 iyy="5.236E-09"
                 iyz="6.2039E-25"
                 izz="5.236E-09" />
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://alpha_description/meshes/chassis/caster_ball.STL" />
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://alpha_description/meshes/chassis/caster_ball.STL" />
        </geometry>
      </collision>
    </link>

    <joint name="${suffix}_caster_joint" type="fixed">
      <origin xyz="0 -0.026 0" rpy="0 0 0" />
      <parent link="${suffix}_rotation_link" />
      <child link="${suffix}_caster_link" />
      <axis xyz="0 0 0" />
    </joint>

    <!-- extensions -->
    <xacro:alpha_caster_transmission suffix="${suffix}" />

  </xacro:macro>

  <!-- The xacro macro xacro:alpha_caster contains: caster and wheels -->
  <xacro:macro name="alpha_caster" params="suffix parent *origin ref_position">

    <xacro:alpha_caster_hub parent="${parent}" suffix="${suffix}" ref_position="${ref_position}" >
      <xacro:insert_block name="origin" />
    </xacro:alpha_caster_hub>

    <!-- wheel macros -->
    <xacro:alpha_wheel parent="${suffix}" suffix="left" reflect="-1" />
    <xacro:alpha_wheel parent="${suffix}" suffix="right" reflect="1" />

    <!-- extensions -->
    <xacro:alpha_caster_gazebo suffix="${suffix}" />
  </xacro:macro>

  <!-- The xacro macro xacro:alpha_base contains: base, caster and wheels -->
  <xacro:macro name="alpha_base" params="name">
    <link name="${name}_link">
      <inertial>
        <mass value="${base_mass}" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="0.016994" ixy="1.2142E-05" ixz="-1.5304E-05"
                 iyy="0.015814" iyz="0.00078225"
                 izz="0.022766" />
      </inertial>
      <visual>
        <origin xyz="0 0 -0.031" rpy="${M_PI/2} 0 0" />
        <geometry>
          <mesh filename="package://alpha_description/meshes/chassis/base_plate.STL" />
        </geometry>
        <material name="White" />
      </visual>
      <collision>
        <origin xyz="0 0 ${base_collision_length/2}" rpy="0 0 0" />
        <geometry>
          <cylinder radius="${base_collision_radius}" length="${base_collision_length}" />
        </geometry>
      </collision>
    </link>

    <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin,
         navigation stack dedpends on this frame -->
    <link name="${name}_footprint">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="0.01 0.01 0.01" />
        </geometry>
        <material name="White" />
      </visual>
    </link>

    <joint name="${name}_footprint_joint" type="fixed">
      <origin xyz="0 0 ${base_z}" rpy="0 0 0" />
      <parent link="${name}_footprint"/>
      <child link="${name}_link" />
      <axis xyz="0 0 0" />
    </joint>

    <!-- caster macro -->
    <xacro:alpha_caster suffix="fl" parent="${name}_link" ref_position="${- M_PI/4}" >
      <origin xyz="${caster_offset_x} ${caster_offset_y} ${caster_offset_z}" rpy="${M_PI/2} 0 ${M_PI}" />
    </xacro:alpha_caster>

    <!-- gazebo extensions -->
    <xacro:alpha_base_gazebo name="${name}" />

  </xacro:macro>

</robot>
