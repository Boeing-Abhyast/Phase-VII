<?xml version="1.0"?>
<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
       xmlns:interface="http://ros.org/wiki/xacro"
       xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:include filename="$(find alpha_description)/urdf/chassis/alpha_base.gazebo.xacro" />
  <xacro:include filename="$(find alpha_description)/urdf/chassis/alpha_base.transmission.xacro" />
  <xacro:include filename="$(find alpha_description)/urdf/materials.urdf.xacro" />

  <!-- DATA SOURCES -->
  <!-- all link geometry sizes are obtained from Function provided CAD model unless stated otherwise -->
  <!-- all simplified collision geometry are hand approximated from CAD model, sometimes from respective bounding boxes -->

  <xacro:property name="M_PI" value="3.1415926535897931" />

  <xacro:property name="caster_offset_x" value="0.0" />
  <xacro:property name="caster_offset_y" value="0.0" />
  <xacro:property name="caster_offset_z" value="-0.02" />
  <xacro:property name="caster_mass" value="0.01" />
  <xacro:property name="caster_collision_length" value="0.0176" />
  <xacro:property name="caster_collision_radius" value="0.017" />

  <xacro:property name="wheel_offset_y" value="0.14" />
  <xacro:property name="wheel_offset_z" value="0.0" />
  <xacro:property name="wheel_mass" value="0.01" />
  <xacro:property name="wheel_length" value="0.0206" />
  <xacro:property name="wheel_radius" value="0.0350" />

  <xacro:property name="base_cg_x" value="0.0" />
  <xacro:property name="base_cg_y" value="0.0" />
  <xacro:property name="base_cg_z" value="0.065" />
  <xacro:property name="base_visual_offset" value="-0.095" />
  <xacro:property name="base_mass" value="2.4" />

  <!-- simplified box collision geometry for base -->
  <xacro:property name="base_collision_length" value="0.10938" />
  <xacro:property name="base_collision_radius" value="0.178" />
  <xacro:property name="base_collision_z" value="0.05949" />

  <!-- Macro for aplha wheel (right/left)-->
  <!-- in typical convention param "reflect" equals +-1 to distinguish left from righ-->
  <xacro:macro name="alpha_wheel" params="suffix parent reflect">

    <joint name="${parent}_${suffix}_wheel_joint" type="continuous">
      <axis xyz="0 0 1" />
      <limit effort="18" velocity="1.5"/>
      <safety_controller  k_velocity="1" />
      <dynamics damping="1.0" friction="0.0" />
      <origin xyz="0 ${reflect * wheel_offset_y} ${wheel_offset_z}" rpy="${M_PI/2} 0 0" />
      <parent link="${parent}_rotation_link"/>
      <child link="${parent}_${suffix}_wheel_link"/>
    </joint>

    <link name="${parent}_${suffix}_wheel_link">
      <inertial>
        <mass value="${wheel_mass}" />
        <origin xyz="0 0 0" />
        <inertia  ixx="0.001" ixy="0.0" ixz="0.0"
                  iyy="0.001" iyz="0.0"
                  izz="0.001" />
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://alpha_description/meshes/chassis/wheel.dae" />
        </geometry>
        <material name="Black" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" /> <!-- rotation because cyl. geom primitive has symmetry axis in +x direction -->
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_length}" />
        </geometry>
      </collision>
    </link>

    <!-- extensions -->
    <xacro:alpha_wheel_gazebo parent="${parent}" suffix="${suffix}" />
    <xacro:alpha_wheel_transmission parent="${parent}" suffix="${suffix}" reflect="${reflect}" />

  </xacro:macro>

  <!-- Macro for alpha caster hub only -->
  <xacro:macro name="alpha_caster_hub" params="suffix parent *origin ref_position" >

    <joint name="${suffix}_rotation_joint" type="fixed">
      <origin xyz="${caster_offset_x} ${caster_offset_y} ${caster_offset_z}" rpy="0 0 ${-M_PI/2}"/>
      <parent link="${parent}"/>
      <child link="${suffix}_rotation_link" />
    </joint>

    <link name="${suffix}_rotation_link">
      <inertial>
        <mass value="${caster_mass}"/>
        <origin xyz="0 0 0" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0"
                 izz="0.001" />
      </inertial>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <cylinder length="${caster_collision_length}" radius="${caster_collision_radius}"/>
        </geometry>
      </collision>
    </link>

    <!-- extensions -->
    <xacro:alpha_caster_transmission suffix="${suffix}" />

  </xacro:macro>

  <!-- The xacro macro xacro:alpha_caster contains: caster and wheels -->
  <xacro:macro name="alpha_caster" params="suffix parent *origin ref_position">

    <xacro:alpha_caster_hub parent="${parent}" suffix="${suffix}" ref_position="${ref_position}" >
      <xacro:insert_block name="origin" />
    </xacro:alpha_caster_hub>

    <!-- wheel macros -->
    <xacro:alpha_wheel parent="${suffix}" suffix="left" reflect="-1" />
    <xacro:alpha_wheel parent="${suffix}" suffix="right" reflect="1" />

    <!-- extensions -->
    <xacro:alpha_caster_gazebo suffix="${suffix}" />
  </xacro:macro>

  <!-- The xacro macro xacro:alpha_base contains: base, caster and wheels -->
  <xacro:macro name="alpha_base" params="name">
    <link name="${name}_link">
      <inertial>
        <mass value="${base_mass}" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.019995" ixy="0.0" ixz="0.0"
                 iyy="0.019995" iyz="0.0"
                 izz="0.03675" />
      </inertial>
      <visual>
        <origin xyz="0 0 ${base_visual_offset}" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://alpha_description/meshes/chassis/base_plate.dae" />
        </geometry>
        <material name="White" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <cylinder radius="${base_collision_radius}" length="${base_collision_length}" />
        </geometry>
      </collision>
    </link>

    <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin,
         navigation stack dedpends on this frame -->
    <link name="${name}_footprint">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="0.01 0.01 0.01" />
        </geometry>
        <material name="White" />
      </visual>
    </link>

    <joint name="${name}_footprint_joint" type="fixed">
      <origin xyz="${base_cg_x} ${base_cg_y} ${base_cg_z}" rpy="0 0 ${-M_PI/2}" />
      <parent link="${name}_footprint"/>
      <child link="${name}_link" />
    </joint>

    <!-- caster macro -->
    <xacro:alpha_caster suffix="fl" parent="${name}_link" ref_position="${- M_PI/4}" >
      <origin xyz="${caster_offset_x} ${caster_offset_y} ${caster_offset_z}" rpy="0 0 0" />
    </xacro:alpha_caster>

    <!-- gazebo extensions -->
    <xacro:alpha_base_gazebo name="${name}" />

  </xacro:macro>

</robot>
